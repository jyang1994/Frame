<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jyuyang.tms.mapper.TicketMapper">
    <resultMap id="BaseResultMap" type="cn.jyuyang.tms.entity.Ticket">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="ticket_num" jdbcType="VARCHAR" property="ticketNum"/>
        <result column="ticket_in_time" jdbcType="TIMESTAMP" property="ticketInTime"/>
        <result column="ticket_out_time" jdbcType="TIMESTAMP" property="ticketOutTime"/>
        <result column="ticket_state" jdbcType="VARCHAR" property="ticketState"/>
        <result column="customer_id" jdbcType="INTEGER" property="customerId"/>
        <result column="store_id" jdbcType="INTEGER" property="storeId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap id="TicketAndStore" type="cn.jyuyang.tms.entity.Ticket" extends="BaseResultMap">
        <collection property="storeSticket" ofType="cn.jyuyang.tms.entity.StoreSticket">
            <id column="store_id" jdbcType="INTEGER" property="id" />
            <result column="manager_name" jdbcType="VARCHAR" property="managerName" />
            <result column="manager_mobile" jdbcType="VARCHAR" property="managerMobile" />
            <result column="store_name" jdbcType="VARCHAR" property="storeName" />
            <result column="ticket_store_address" jdbcType="VARCHAR" property="ticketStoreAddress" />
            <result column="business_license_photo" jdbcType="VARCHAR" property="businessLicensePhoto" />
            <result column="manager_card" jdbcType="VARCHAR" property="managerCard" />
            <result column="manager_card_before" jdbcType="VARCHAR" property="managerCardBefore" />
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
            <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
            <result column="account_id" jdbcType="INTEGER" property="accountId" />
            <result column="store_longitude" jdbcType="VARCHAR" property="storeLongitude" />
            <result column="store_latitude" jdbcType="VARCHAR" property="storeLatitude" />
            <result column="manager_card_after" jdbcType="VARCHAR" property="managerCardAfter" />
            <result column="state" jdbcType="VARCHAR" property="state" />
        </collection>
    </resultMap>
    <select id="selectTicketAndStore" resultMap="TicketAndStore">
        SELECT
            ticket.*, store_sticket.*
        FROM
            `ticket`
            LEFT JOIN store_sticket ON ticket.store_id = store_sticket.id

    </select>
    <insert id="insertTicketList">
        INSERT into ticket (create_time,ticket_in_time,ticket_state,ticket_num)
        VALUES
        <foreach collection="ticketList" item="ticket" separator=",">
            (#{ticket.createTime},#{ticket.ticketInTime},#{ticket.ticketState},#{ticket.ticketNum})
        </foreach>
    </insert>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, ticket_num, ticket_in_time, ticket_out_time, ticket_state, customer_id, store_id,
        create_time, update_time
    </sql>
    <select id="selectByExample" parameterType="cn.jyuyang.tms.entity.TicketExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ticket
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ticket
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM ticket
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.jyuyang.tms.entity.TicketExample">
        delete from ticket
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.jyuyang.tms.entity.Ticket">
        INSERT INTO ticket (id, ticket_num, ticket_in_time,
                            ticket_out_time, ticket_state, customer_id,
                            store_id, create_time, update_time
        )
        VALUES (#{id,jdbcType=INTEGER}, #{ticketNum,jdbcType=VARCHAR}, #{ticketInTime,jdbcType=TIMESTAMP},
                #{ticketOutTime,jdbcType=TIMESTAMP}, #{ticketState,jdbcType=VARCHAR}, #{customerId,jdbcType=INTEGER},
                #{storeId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.jyuyang.tms.entity.Ticket">
        insert into ticket
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="ticketNum != null">
                ticket_num,
            </if>
            <if test="ticketInTime != null">
                ticket_in_time,
            </if>
            <if test="ticketOutTime != null">
                ticket_out_time,
            </if>
            <if test="ticketState != null">
                ticket_state,
            </if>
            <if test="customerId != null">
                customer_id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="ticketNum != null">
                #{ticketNum,jdbcType=VARCHAR},
            </if>
            <if test="ticketInTime != null">
                #{ticketInTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ticketOutTime != null">
                #{ticketOutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ticketState != null">
                #{ticketState,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                #{customerId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.jyuyang.tms.entity.TicketExample" resultType="java.lang.Long">
        select count(*) from ticket
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ticket
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.ticketNum != null">
                ticket_num = #{record.ticketNum,jdbcType=VARCHAR},
            </if>
            <if test="record.ticketInTime != null">
                ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.ticketOutTime != null">
                ticket_out_time = #{record.ticketOutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.ticketState != null">
                ticket_state = #{record.ticketState,jdbcType=VARCHAR},
            </if>
            <if test="record.customerId != null">
                customer_id = #{record.customerId,jdbcType=INTEGER},
            </if>
            <if test="record.storeId != null">
                store_id = #{record.storeId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null">
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ticket
        set id = #{record.id,jdbcType=INTEGER},
        ticket_num = #{record.ticketNum,jdbcType=VARCHAR},
        ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
        ticket_out_time = #{record.ticketOutTime,jdbcType=TIMESTAMP},
        ticket_state = #{record.ticketState,jdbcType=VARCHAR},
        customer_id = #{record.customerId,jdbcType=INTEGER},
        store_id = #{record.storeId,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.jyuyang.tms.entity.Ticket">
        update ticket
        <set>
            <if test="ticketNum != null">
                ticket_num = #{ticketNum,jdbcType=VARCHAR},
            </if>
            <if test="ticketInTime != null">
                ticket_in_time = #{ticketInTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ticketOutTime != null">
                ticket_out_time = #{ticketOutTime,jdbcType=TIMESTAMP},
            </if>
            <if test="ticketState != null">
                ticket_state = #{ticketState,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null">
                customer_id = #{customerId,jdbcType=INTEGER},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.jyuyang.tms.entity.Ticket">
        UPDATE ticket
        SET ticket_num      = #{ticketNum,jdbcType=VARCHAR},
            ticket_in_time  = #{ticketInTime,jdbcType=TIMESTAMP},
            ticket_out_time = #{ticketOutTime,jdbcType=TIMESTAMP},
            ticket_state    = #{ticketState,jdbcType=VARCHAR},
            customer_id     = #{customerId,jdbcType=INTEGER},
            store_id        = #{storeId,jdbcType=INTEGER},
            create_time     = #{createTime,jdbcType=TIMESTAMP},
            update_time     = #{updateTime,jdbcType=TIMESTAMP}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>
</mapper>