<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jyuyang.tms.mapper.TicketOutMapper">
  <resultMap id="BaseResultMap" type="cn.jyuyang.tms.entity.TicketOut">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="out_time" jdbcType="TIMESTAMP" property="outTime" />
    <result column="out_store" jdbcType="VARCHAR" property="outStore" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="out_num" jdbcType="INTEGER" property="outNum" />
    <result column="out_start_ticket" jdbcType="VARCHAR" property="outStartTicket" />
    <result column="out_end_ticket" jdbcType="VARCHAR" property="outEndTicket" />
    <result column="one_price" jdbcType="DECIMAL" property="onePrice" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="out_state" jdbcType="VARCHAR" property="outState" />
    <result column="out_account" jdbcType="VARCHAR" property="outAccount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, out_time, out_store, content, out_num, out_start_ticket, out_end_ticket, one_price, 
    total_price, out_state, out_account
  </sql>
  <select id="selectByExample" parameterType="cn.jyuyang.tms.entity.TicketOutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket_out
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ticket_out
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jyuyang.tms.entity.TicketOutExample">
    delete from ticket_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.jyuyang.tms.entity.TicketOut">
    insert into ticket_out (id, out_time, out_store, 
      content, out_num, out_start_ticket, 
      out_end_ticket, one_price, total_price, 
      out_state, out_account)
    values (#{id,jdbcType=INTEGER}, #{outTime,jdbcType=TIMESTAMP}, #{outStore,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{outNum,jdbcType=INTEGER}, #{outStartTicket,jdbcType=VARCHAR}, 
      #{outEndTicket,jdbcType=VARCHAR}, #{onePrice,jdbcType=DECIMAL}, #{totalPrice,jdbcType=DECIMAL}, 
      #{outState,jdbcType=VARCHAR}, #{outAccount,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.jyuyang.tms.entity.TicketOut">
    insert into ticket_out
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="outStore != null">
        out_store,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="outNum != null">
        out_num,
      </if>
      <if test="outStartTicket != null">
        out_start_ticket,
      </if>
      <if test="outEndTicket != null">
        out_end_ticket,
      </if>
      <if test="onePrice != null">
        one_price,
      </if>
      <if test="totalPrice != null">
        total_price,
      </if>
      <if test="outState != null">
        out_state,
      </if>
      <if test="outAccount != null">
        out_account,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outStore != null">
        #{outStore,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="outNum != null">
        #{outNum,jdbcType=INTEGER},
      </if>
      <if test="outStartTicket != null">
        #{outStartTicket,jdbcType=VARCHAR},
      </if>
      <if test="outEndTicket != null">
        #{outEndTicket,jdbcType=VARCHAR},
      </if>
      <if test="onePrice != null">
        #{onePrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="outState != null">
        #{outState,jdbcType=VARCHAR},
      </if>
      <if test="outAccount != null">
        #{outAccount,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jyuyang.tms.entity.TicketOutExample" resultType="java.lang.Long">
    select count(*) from ticket_out
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket_out
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outStore != null">
        out_store = #{record.outStore,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.outNum != null">
        out_num = #{record.outNum,jdbcType=INTEGER},
      </if>
      <if test="record.outStartTicket != null">
        out_start_ticket = #{record.outStartTicket,jdbcType=VARCHAR},
      </if>
      <if test="record.outEndTicket != null">
        out_end_ticket = #{record.outEndTicket,jdbcType=VARCHAR},
      </if>
      <if test="record.onePrice != null">
        one_price = #{record.onePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.totalPrice != null">
        total_price = #{record.totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.outState != null">
        out_state = #{record.outState,jdbcType=VARCHAR},
      </if>
      <if test="record.outAccount != null">
        out_account = #{record.outAccount,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket_out
    set id = #{record.id,jdbcType=INTEGER},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      out_store = #{record.outStore,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      out_num = #{record.outNum,jdbcType=INTEGER},
      out_start_ticket = #{record.outStartTicket,jdbcType=VARCHAR},
      out_end_ticket = #{record.outEndTicket,jdbcType=VARCHAR},
      one_price = #{record.onePrice,jdbcType=DECIMAL},
      total_price = #{record.totalPrice,jdbcType=DECIMAL},
      out_state = #{record.outState,jdbcType=VARCHAR},
      out_account = #{record.outAccount,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jyuyang.tms.entity.TicketOut">
    update ticket_out
    <set>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outStore != null">
        out_store = #{outStore,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="outNum != null">
        out_num = #{outNum,jdbcType=INTEGER},
      </if>
      <if test="outStartTicket != null">
        out_start_ticket = #{outStartTicket,jdbcType=VARCHAR},
      </if>
      <if test="outEndTicket != null">
        out_end_ticket = #{outEndTicket,jdbcType=VARCHAR},
      </if>
      <if test="onePrice != null">
        one_price = #{onePrice,jdbcType=DECIMAL},
      </if>
      <if test="totalPrice != null">
        total_price = #{totalPrice,jdbcType=DECIMAL},
      </if>
      <if test="outState != null">
        out_state = #{outState,jdbcType=VARCHAR},
      </if>
      <if test="outAccount != null">
        out_account = #{outAccount,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jyuyang.tms.entity.TicketOut">
    update ticket_out
    set out_time = #{outTime,jdbcType=TIMESTAMP},
      out_store = #{outStore,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      out_num = #{outNum,jdbcType=INTEGER},
      out_start_ticket = #{outStartTicket,jdbcType=VARCHAR},
      out_end_ticket = #{outEndTicket,jdbcType=VARCHAR},
      one_price = #{onePrice,jdbcType=DECIMAL},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      out_state = #{outState,jdbcType=VARCHAR},
      out_account = #{outAccount,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>